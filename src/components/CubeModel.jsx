/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Memorie (https://sketchfab.com/Memorie)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/sci-fi-cube-2c4b8f6de26b4e869d342a92d881debe
Title: Sci-Fi Cube
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

const CubeModel = (props) => {
  const group = useRef()
  const { nodes, materials } = useGLTF('/sci-fi_cube.glb')

  // Add continuous rotation animation
  useFrame((state, delta) => {
    if (group.current) {
      group.current.rotation.y += delta * 0.5
    }
  })

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]} scale={0.003}>
          <group name="dd6ef14ae51b43909b1ee178a049bd4efbx" rotation={[Math.PI / 2, 0, 0]}>
            <group name="Object_2">
              <group name="RootNode">
                <group
                  name="Power_Cube"
                  position={[0, 19.437, 0]}
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={94.1}>
                  <mesh
                    name="Power_Cube_Emission_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.Power_Cube_Emission_0.geometry}
                    material={materials.Emission}
                  />
                </group>
                <group
                  name="Metal_Shell"
                  position={[0, 0.277, 0]}
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={100}>
                  <mesh
                    name="0"
                    castShadow
                    receiveShadow
                    geometry={nodes['0'].geometry}
                    material={materials.Metal_Shell}
                    morphTargetDictionary={nodes['0'].morphTargetDictionary}
                    morphTargetInfluences={nodes['0'].morphTargetInfluences}
                  />
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/sci-fi_cube.glb')

export default CubeModel; 